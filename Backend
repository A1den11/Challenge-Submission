from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///forms.db'
db = SQLAlchemy(app)

# Database Model
class Form(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    questions = db.Column(db.JSON, nullable=False)

# Initialize DB
@app.before_first_request
def create_tables():
    db.create_all()

# API to fetch a form
@app.route('/form/<int:form_id>', methods=['GET'])
def get_form(form_id):
    form = Form.query.get(form_id)
    if not form:
        return jsonify({"error": "Form not found"}), 404
    return jsonify({
        "id": form.id,
        "name": form.name,
        "questions": form.questions
    })

# API to submit a form
@app.route('/form/<int:form_id>/submit', methods=['POST'])
def submit_form(form_id):
    form = Form.query.get(form_id)
    if not form:
        return jsonify({"error": "Form not found"}), 404
    data = request.json
    # Validate inputs (placeholder logic)
    errors = []
    for question in form.questions:
        if question['required'] and question['id'] not in data:
            errors.append(f"{question['id']} is required.")
    if errors:
        return jsonify({"errors": errors}), 400
    return jsonify({"message": "Form submitted successfully!"})

# Sample Route to Create a Form
@app.route('/form/create', methods=['POST'])
def create_form():
    data = request.json
    new_form = Form(name=data['name'], questions=data['questions'])
    db.session.add(new_form)
    db.session.commit()
    return jsonify({"message": "Form created successfully!", "form_id": new_form.id})

if __name__ == '__main__':
    app.run(debug=True)
